package templates

import (
	"fmt"
	"strconv"
)

templ Document(vars DocumentVars) {
	<!DOCTYPE html>
	<html lang="en" class={ vars.Theme }>
	@head(vars)
	<body>
	@header(vars)
	<main>
		<div id="files">
			for i, file := range vars.Files {
				<input id={ fmt.Sprintf("file-%d", i) } type="radio" name="files" value={ strconv.Itoa(i) }
                    if i == vars.FileIndex {
                        checked
                    }
                />
                <label for={ fmt.Sprintf("file-%d", i) }>{ file.Name }</label>
			}
			<div id="file-add" class="file add"
				if !vars.Edit {
					style="display: none;"
				}
			></div>
		</div>
		<div id="content">
            <textarea id="code-edit" spellcheck="false" autocomplete="off"
	            if !vars.Edit {
	                style="display: none;"
	            }
            >{ vars.Files[vars.FileIndex].Content }</textarea>
            <pre id="code"
                if vars.Edit {
                    style="display: none;"
                }
            ><code id="code-view" class="ch-chroma">@WriteUnsafe(vars.Files[vars.FileIndex].Formatted)</code></pre>
		</div>
		<div id="footer">
            <select title="Version" id="version" autocomplete="off">
                for _, version := range vars.Versions {
                    <option title={ version.Time } value={ strconv.FormatInt(version.Version, 10) } selected?={ version.Version == vars.Version }>{ version.Label }</option>
                }
            </select>
            <select title="Style" id="style" autocomplete="off">
                for _, style := range vars.Styles {
                    <option value={ style.Name } data-theme={ style.Theme } selected?={ vars.Style == style.Name }>{ style.Name }</option>
                }
            </select>
            <div class="spacer"></div>
            <label title="Characters" for="code-edit">
                <span id="code-edit-count">{ strconv.Itoa(len([]rune(vars.Files[vars.FileIndex].Content))) }</span>
                if vars.Max > 0 {
                    <span id="code-edit-max">/{ strconv.Itoa(vars.Max) }</span>
                }
            </label>
            <select title="Language" id="language" autocomplete="off">
                <option value="auto" selected?={ vars.Files[vars.FileIndex].Language == "" }>auto</option>
                for _, lexer := range vars.Lexers {
                    <option value={ lexer } selected?={ vars.Files[vars.FileIndex].Language == lexer }>{ lexer }</option>
                }
            </select>
        </div>
	</main>
	@files(vars.Files)
	<script src="/assets/js/script.js"></script>
	<script src="/assets/js/events.js"></script>
	</body>
	</html>
}

script files(files []File) {
	window.gobin = {
		files: files,
	};
}
