package templates

import (
	"fmt"
	"strconv"
)

templ fileAdd() {

}

templ fileSelect(i int, file File, selected bool) {
	<input id={ fmt.Sprintf("file-%d", i) } type="radio" name="files" value={ fmt.Sprintf("file-tab-%d", i) }
		if selected {
			checked
		}
	/>
	<label for={ fmt.Sprintf("file-%d", i) }>{ file.Name }</label>
}

templ fileTab(vars DocumentVars, i int, file File, selected bool) {
	<div id={ fmt.Sprintf("file-tab-%d", i) } class="file-tab"
		if selected {
            style="display:flex"
        }
	>
        if vars.Edit {
            <textarea hx-on:keydown="onCodeEditKeyDown(event)" hx-on:input="onCodeEditInput(event)" id="code-edit" spellcheck="false" autocomplete="off">{ file.Content }</textarea>
        } else {
            <pre id="code"><code id="code-view" class="ch-chroma">@WriteUnsafe(file.Formatted)</code></pre>
        }
        <div id="footer">
            <select hx-on:change="onVersionChange(event)" title="Version" id="version" autocomplete="off">
                for _, version := range vars.Versions {
                    <option title={ version.Time } value={ strconv.FormatInt(version.Version, 10) } selected?={ version.Version == vars.Version }>{ version.Label }</option>
                }
            </select>
            <select hx-on:change="onStyleChange(event)" title="Style" id="style" autocomplete="off">
                for _, style := range vars.Styles {
                    <option value={ style.Name } data-theme={ style.Theme } selected?={ vars.Style == style.Name }>{ style.Name }</option>
                }
            </select>
            <div class="spacer"></div>
            <label title="Characters" for="code-edit">
                <span id="code-edit-count">{ strconv.Itoa(len([]rune(file.Content))) }</span>
                if vars.Max > 0 {
                    <span id="code-edit-max">/{ strconv.Itoa(vars.Max) }</span>
                }
            </label>
            <select hx-on:change="onLanguageChange(event)" title="Language" id="language" autocomplete="off">
                <option value="auto" selected?={ file.Language == "" }>auto</option>
                for _, lexer := range vars.Lexers {
                    <option value={ lexer } selected?={ file.Language == lexer }>{ lexer }</option>
                }
            </select>
        </div>
    </div>
}